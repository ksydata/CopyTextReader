문제의 소재
[1] 발급한 주민등록초본 pdf, tif, png(해상도 최대 600bpi) 스캔 시 우측 상단의 QR코드 인식 오류 발생하는 경우 2,000건 중 600건 가량 수기 등록 _ 종합상담 화면과 연동
[2] 대안으로 QR스캔이 아닌 OCR 이미지 검출을 통해 채무자, 주민등록번호, 주소지(주소불명자 또는 주소변경 이력 파악), 발급일자 텍스트 엑셀 파일로 이관
[3] 앞으로 2,000건에서 3배인 6,000건 발급 및 지속적 발급량 증가 예정

대안
[1] 주민등록초본 정보 추출기
[2] 스캔된 정보를 자동 추출
[3] 로컬 환경에서 처리하며, 서버나 API호출 없어야

기능
[1] 파일 업로드(확장자 선택)
[2] OCR 문자 인식
    Tesseract
    EasyOCR
    PaddleOCR
    MMOCR
    DBNet과 SAR의 조합은 정확도가 중요한 응용 환경
    에 적합하며, DBNet과 CRNN의 조합은 실시간 처리
    가 필요한 상황에서 효과적인 대안
    Pororo

            ┌─────────────────────┐
            │ AbstractOCRImage    │
            │   preprocessImage() │
            └─────────────────────┘
              ▲                ▲
    ┌─────────┴────────┐   ┌───┴──────────────┐
    │ TesseractOCR     │   │ HangeulOCREngine │
    └──────────────────┘   └──────────────────┘

[3] 데이터 정규화
    불완전한 텍스트 Rgex활용하여 필터링
[4] GUI
    
인식 대상(엑셀 파일 컬럼 순서)
[1] 발급일자
[2] 초본명
[3] 초본생년월일
[4] 채무자명
[5] 채무자상태명
[6] 전입일자
[7] 변동일자
[8] 변동사유

레퍼런스
[1] https://builtin.com/data-science/python-ocr
[2] https://github.com/rkdgg0/DevelopmentOfHangeulOCR
[3] https://github.com/rkdgg0/DevelopmentOfHangeulOCR?tab=readme-ov-file
[4] https://git-lfs.com/


초성 = ((문자유니코드− 0xAC00)/28)/21 (3.2)
중성 = ((문자유니코드− 0xAC00)/28)%21 (3.3)
초성 = (문자유니코드− 0xAC00)%28 (3.4)

평가 과정에선 총 3단계를 거쳐 낱자를 인식한다.
문자검출 입력 이미지에서 문자의 위치와 영역을 찾아내는 과정이다. 
인식된 문자의 네 모서리의 위치를 담은 바운딩박스를 계산하여 인식 과정으로 전달한다.
문자인식 검출단계에서 전달받은 바운딩박스를 기준으로 기학습된 모델을 통해 초성, 중성, 종성을 각각 찾는다.
음절복원 인식된 낱자의 유니코드를 이용하여 공식을 통해 음절의 유니코드 값으로 변환한다. 
이를 통해 글자의 이미지가 텍스트의 형태로 변경된다.

(초성∗ 21 +중성) ∗ 28 +종성+ 0xAC00 (3.5)
한 글자를 낱자로 구분하여 학습하는 것은 인식률 향상에 도움을 준다. 
특히 이는 종성이 있는 글자를 인식할 때 뚜렷하게 나타나는데, 
기존 모델에서는 둘받침, 쌍받침을 인식하는데 어려움을 보이지만, 
우리의 모델은 종성을 하나의 객체로 인식함으로써 복잡한 문자인식에 강점을 보인다.